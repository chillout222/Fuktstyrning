--- a/custom_components/fuktstyrning/learning.py
+++ b/custom_components/fuktstyrning/learning.py
@@
-        # start initial analysis immediately (blocks HA start!)
-        self._initial_task = self.hass.loop.create_task(
-            self._delayed_initial_analysis()
-        )
+        # Kör initial analys efter att Home Assistant har startat (blockerar inte)
+
+        async def _run_later(event):  # pylint: disable=unused-argument
+            # heavy work i executor‑tråd
+            await self.hass.async_add_executor_job(self._initial_analysis)
+
+        self.hass.bus.async_listen_once("homeassistant_started", _run_later)
-
-    async def _delayed_initial_analysis(self):
-        """Heavy first‑run analysis that used to block start‑up."""
-        await asyncio.sleep(2)  # give other integrations a head‑start
-        await self._perform_full_analysis()
+    # ------------------------------------------------------------------
+    # Ny sync‑metod som körs i executor‑tråd
+    # ------------------------------------------------------------------
+
+    def _initial_analysis(self):
+        """Heavy first‑run analysis executed in executor thread."""
+        try:
+            self._perform_full_analysis()
+            _LOGGER.debug("Initial learning analysis complete")
+        except Exception as exc:  # pylint: disable=broad-except
+            _LOGGER.error("Initial analysis failed: %s", exc)
@@
     # resten av filen oförändrad
